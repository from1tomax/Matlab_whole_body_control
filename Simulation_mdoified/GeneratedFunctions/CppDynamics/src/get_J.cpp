//
//  Academic License - for use in teaching, academic research, and meeting
//  course requirements at degree granting institutions only.  Not for
//  government, commercial, or other organizational use.
//
//  get_J.cpp
//
//  Code generation for function 'get_J'
//


// Include files
#include "get_J.h"
#include <cmath>

// Function Definitions
void get_J(const double qv[3], const double qa[7], double J[60])
{
  double b_t110_tmp;
  double t10;
  double t103;
  double t105;
  double t108;
  double t108_tmp;
  double t11;
  double t110_tmp;
  double t113;
  double t118_tmp;
  double t12;
  double t121;
  double t123;
  double t126_tmp;
  double t127;
  double t128;
  double t128_tmp;
  double t13;
  double t130;
  double t134;
  double t14;
  double t15;
  double t157;
  double t16;
  double t160;
  double t165;
  double t166;
  double t17;
  double t171;
  double t18;
  double t184;
  double t189;
  double t19;
  double t191;
  double t192;
  double t196_tmp;
  double t2;
  double t20;
  double t206;
  double t208;
  double t21;
  double t211;
  double t216;
  double t23;
  double t23_tmp;
  double t25;
  double t27;
  double t28;
  double t29;
  double t3;
  double t31;
  double t31_tmp;
  double t32;
  double t33;
  double t34;
  double t4;
  double t5;
  double t52;
  double t54;
  double t55;
  double t56;
  double t57;
  double t6;
  double t60;
  double t66;
  double t67;
  double t69;
  double t7;
  double t70;
  double t72;
  double t73;
  double t75;
  double t8;
  double t80;
  double t82;
  double t84;
  double t86;
  double t89;
  double t9;
  double t90;
  double t91;
  double t92;
  double t97_tmp;
  double t98;

  // GET_J
  //     J = GET_J(qv,qa)
  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     14-Feb-2023 10:02:51
  t2 = std::cos(qv[2]);
  t3 = std::cos(qa[0]);
  t4 = std::cos(qa[1]);
  t5 = std::cos(qa[2]);
  t6 = std::cos(qa[3]);
  t7 = std::cos(qa[4]);
  t8 = std::cos(qa[5]);
  t9 = std::sin(qv[2]);
  t10 = std::sin(qa[0]);
  t11 = std::sin(qa[1]);
  t12 = std::sin(qa[2]);
  t13 = std::sin(qa[3]);
  t14 = std::sin(qa[4]);
  t15 = std::sin(qa[5]);
  t16 = t3 * t5;
  t17 = t4 * t6;
  t18 = t3 * t12;
  t19 = t5 * t10;
  t20 = t4 * t13;
  t21 = t10 * t12;
  t23_tmp = t10 * t11;
  t23 = t23_tmp * t13;
  t28 = t3 * t6 * t11;
  t29 = t5 * t6 * t11;
  t31_tmp = t3 * t11;
  t31 = t31_tmp * t13;
  t32 = t6 * t10 * t11;
  t216 = t5 * t11;
  t33 = t216 * t13;
  t34 = t7 * t11 * t12;
  t25 = t4 * t16;
  t27 = t4 * t19;
  t52 = t23 * 0.0825;
  t55 = t17 + t33;
  t57 = t28 * 0.384;
  t60 = t32 * 0.384;
  t127 = t2 + t9 * 1.224646799147353E-16;
  t130 = -t9 + t2 * 1.224646799147353E-16;
  t5 = t18 + t27;
  t54 = t19 + t4 * t18;
  t56 = t25 * 0.0825;
  t66 = -(t31 * 0.0825);
  t69 = t20 + -t29;
  t72 = t8 * t55;
  t67 = t16 + -(t4 * t21);
  t19 = t21 + -t25;
  t70 = t6 * t5;
  t73 = t13 * t5;
  t82 = t14 * t69;
  t91 = t72 * 0.107;
  t75 = t6 * t19;
  t80 = t13 * t19;
  t84 = t70 * 0.0825;
  t86 = t73 * 0.384;
  t89 = t23 + t70;
  t97_tmp = t11 * t12;
  t16 = t97_tmp * t14 + t7 * t69;
  t110_tmp = t32 - t73;
  b_t110_tmp = t15 * t110_tmp;
  t90 = t75 * 0.0825;
  t92 = t80 * 0.384;
  t98 = t28 + t80;
  t105 = t15 * t16;
  t103 = t8 * t98;
  t108_tmp = t15 * t98;
  t108 = t108_tmp * 0.088;
  t6 = t105 * 0.107;
  t5 = t14 * t67 + t7 * t89;
  t118_tmp = t31 - t75;
  t19 = t14 * t54 + -t7 * t118_tmp;
  t113 = t103 * 0.107;
  t121 = t15 * t5;
  t123 = t15 * t19;
  t126_tmp = t8 * t5;
  t69 = t126_tmp * 0.088;
  t128_tmp = t8 * t19;
  t128 = t128_tmp * 0.088;
  t13 = t121 * 0.107;
  t134 = t123 * 0.107;
  t157 = -t8 * t110_tmp + t121;
  t160 = t103 + t123;
  t171 = (t15 * t55 * 0.088 + t8 * t16 * 0.088) + (-t91 + t6);
  t15 = t8 * t110_tmp;
  t165 = t15 * -0.107 + t13;
  t166 = t113 + t134;
  t16 = (((t17 * 0.384 + -(t20 * 0.0825)) + t29 * 0.0825) + t33 * 0.384) + t171;
  t184 = -(t216 * 0.0825) + t16;
  t189 = (b_t110_tmp * 0.088 + t69) + t165;
  t191 = (-t108 + t128) + t166;
  t211 = (((((((((t31_tmp * 0.316 + -(t21 * 0.0825)) + t56) + t57) + -(t31 *
    0.0825)) + t90) + t92) + t108) + -t113) + -t128) + -t134;
  t192 = t4 * 0.316 + t184;
  t196_tmp = t34 - t82;
  t5 = t91 - t6;
  t19 = t72 - t105;
  t206 = -t157 * t5 + t165 * t19;
  t208 = -t160 * t5 + t166 * t19;
  t29 = ((((((t52 - t60) + t84) + t86) + b_t110_tmp * -0.088) - t69) - t13) +
    t15 * 0.107;
  t216 = t67 * t16 + t97_tmp * t29;
  t91 = ((((((t57 + t66) + t90) + t92) + t108) + -t113) + -t128) + -t134;
  t20 = t54 * t16 + t97_tmp * t91;
  t19 = (((((((((((t32 * 4.7026437087258358E-17 + t18 * 1.010333609296566E-17) +
                  t23_tmp * 3.8698838853056362E-17) + t27 *
                 1.010333609296566E-17) + -(t23 * 1.010333609296566E-17)) +
               -(t73 * 4.7026437087258358E-17)) + -(t70 * 1.010333609296566E-17))
             + b_t110_tmp * 1.0776891832496711E-17) + t15 *
            -1.310372075087668E-17) + t126_tmp * 1.0776891832496711E-17) + t121 *
          1.310372075087668E-17) + t211) + 0.275;
  t15 = (t18 * 0.0825 + t27 * 0.0825) + ((((t60 + -t52) + -t84) + -t86) + t189);
  t8 = t98 * t171 + t55 * t191;
  t33 = t7 * t67 - t14 * t89;
  t17 = t171 * t33 + -t189 * t196_tmp;
  t6 = ((((((((-(t21 * 0.0825) + t56) + t57) + t66) + t90) + t92) + t108) +
         -t113) + -t128) + -t134;
  t13 = t31_tmp * t184 + -t4 * t6;
  t69 = t23_tmp * 0.316 + t15;
  t5 = (((((((((((-(t28 * 4.7026437087258358E-17) + t21 * 1.010333609296566E-17)
                 + -(t31_tmp * 3.8698838853056362E-17)) + t31 *
                1.010333609296566E-17) + -(t25 * 1.010333609296566E-17)) + -(t80
    * 4.7026437087258358E-17)) + -(t75 * 1.010333609296566E-17)) + -(t108_tmp *
             1.0776891832496711E-17)) + t103 * 1.310372075087668E-17) + t128_tmp
          * 1.0776891832496711E-17) + t123 * 1.310372075087668E-17) + t69) +
    0.155;
  J[0] = 1.0;
  J[1] = 0.0;
  J[2] = 0.0;
  J[3] = 0.0;
  J[4] = 0.0;
  J[5] = 0.0;
  J[6] = 0.0;
  J[7] = 1.0;
  J[8] = 0.0;
  J[9] = 0.0;
  J[10] = 0.0;
  J[11] = 0.0;
  J[12] = t2 * t5 + t9 * t19;
  J[13] = -t2 * t19 + t9 * t5;
  J[14] = 0.0;
  J[15] = 0.0;
  J[16] = 0.0;
  J[17] = 1.0;
  J[18] = t127 * t69 - t130 * t211;
  J[19] = -t127 * t211 - t130 * t69;
  J[20] = 0.0;
  J[21] = 0.0;
  J[22] = 0.0;
  J[23] = 1.0;
  t16 = -t3 * t127;
  t5 = t10 * t130;
  J[24] = t16 * t192 - t5 * t192;
  t19 = t10 * t127;
  J[25] = t3 * t130 * t192 - t19 * t192;
  J[26] = -t3 * t211 - t10 * t69;
  J[27] = -t3 * t130 + t19;
  J[28] = t16 - t5;
  J[29] = 0.0;
  t16 = t23_tmp * t184 - t4 * t15;
  J[30] = t130 * t13 - t127 * t16;
  J[31] = t127 * t13 + t130 * t16;
  J[32] = -t10 * t11 * t6 + t31_tmp * t15;
  J[33] = -t3 * t11 * t127 - t23_tmp * t130;
  J[34] = t31_tmp * t130 - t23_tmp * t127;
  J[35] = t4;
  J[36] = t127 * t216 + t130 * t20;
  J[37] = t127 * t20 - t130 * t216;
  J[38] = t67 * t91 - t54 * t29;
  J[39] = -t54 * t127 + t67 * t130;
  J[40] = t54 * t130 + t67 * t127;
  J[41] = -t11 * t12;
  t16 = t55 * t189 - t171 * t110_tmp;
  J[42] = t127 * t16 + t130 * t8;
  J[43] = -t130 * t16 + t127 * t8;
  J[44] = t98 * t189 + t191 * t110_tmp;
  J[45] = -t98 * t127 - t130 * t110_tmp;
  J[46] = t98 * t130 - t127 * t110_tmp;
  J[47] = t55;
  t5 = t7 * t54 + t14 * t118_tmp;
  t16 = -t191 * t196_tmp + t171 * t5;
  J[48] = t127 * t17 + t130 * t16;
  J[49] = -t130 * t17 + t127 * t16;
  J[50] = t189 * t5 - t191 * t33;
  J[51] = -t127 * t5 + t130 * t33;
  J[52] = t130 * t5 + t127 * t33;
  J[53] = -t34 + t82;
  J[54] = -t127 * t206 - t130 * t208;
  J[55] = -t127 * t208 + t130 * t206;
  J[56] = t157 * t166 - t160 * t165;
  J[57] = t127 * t160 - t130 * t157;
  J[58] = -t127 * t157 - t130 * t160;
  J[59] = -t72 + t105;
}

// End of code generation (get_J.cpp)
