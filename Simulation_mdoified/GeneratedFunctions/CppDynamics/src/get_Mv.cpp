//
//  Academic License - for use in teaching, academic research, and meeting
//  course requirements at degree granting institutions only.  Not for
//  government, commercial, or other organizational use.
//
//  get_Mv.cpp
//
//  Code generation for function 'get_Mv'
//


// Include files
#include "get_Mv.h"
#include <cmath>

// Function Definitions
void get_Mv(const double qv[3], double Mv[49])
{
  double t11;
  double t2;
  double t3;

  // GET_MV
  //     MV = GET_MV(qv)
  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     05-May-2023 11:52:18
  t2 = std::cos(qv[2]);
  t3 = std::sin(qv[2]);
  t11 = t3 * 4.378475871315 + -(t2 * 1.3554857805);
  t2 = -(t3 * 1.3554857805) + -(t2 * 4.378475871315);
  Mv[0] = 201.65;
  Mv[1] = 0.0;
  Mv[2] = t11;
  Mv[3] = 0.0;
  Mv[4] = 0.0;
  Mv[5] = 0.0;
  Mv[6] = 0.0;
  Mv[7] = 0.0;
  Mv[8] = 201.65;
  Mv[9] = t2;
  Mv[10] = 0.0;
  Mv[11] = 0.0;
  Mv[12] = 0.0;
  Mv[13] = 0.0;
  Mv[14] = t11;
  Mv[15] = t2;
  Mv[16] = 12.098421382333189;
  Mv[17] = 0.0;
  Mv[18] = 0.0;
  Mv[19] = 0.0;
  Mv[20] = 0.0;
  Mv[21] = 0.0;
  Mv[22] = 0.0;
  Mv[23] = 0.0;
  Mv[24] = 0.05241925;
  Mv[25] = 0.0;
  Mv[26] = 0.0;
  Mv[27] = 0.0;
  Mv[28] = 0.0;
  Mv[29] = 0.0;
  Mv[30] = 0.0;
  Mv[31] = 0.0;
  Mv[32] = 0.05241925;
  Mv[33] = 0.0;
  Mv[34] = 0.0;
  Mv[35] = 0.0;
  Mv[36] = 0.0;
  Mv[37] = 0.0;
  Mv[38] = 0.0;
  Mv[39] = 0.0;
  Mv[40] = 0.05241925;
  Mv[41] = 0.0;
  Mv[42] = 0.0;
  Mv[43] = 0.0;
  Mv[44] = 0.0;
  Mv[45] = 0.0;
  Mv[46] = 0.0;
  Mv[47] = 0.0;
  Mv[48] = 0.05241925;

  //  OLD with inertia taken from urdf of summmit_xls and wheels mass of 1.55
  //  %GET_MV
  //  %    MV = GET_MV(qv)
  //
  //  %    This function was generated by the Symbolic Math Toolbox version 8.6. 
  //  %    17-Apr-2023 16:26:18
  //
  //  phi = qv(3);
  //  t2 = cos(phi);
  //  t3 = sin(phi);
  //  t4 = t2.*5.016614113875;
  //  t5 = t2.*1.5530402125;
  //  t6 = t3.*5.016614113875;
  //  t7 = t3.*1.5530402125;
  //  t8 = -t4;
  //  t9 = -t5;
  //  t10 = -t7;
  //  t11 = t6+t9;
  //  t12 = t8+t10;
  //  Mv = reshape([2.0745e+2,0.0,t11,0.0,2.0745e+2,t12,t11,t12,7.022445651482428],[3,3]); 
}

// End of code generation (get_Mv.cpp)
